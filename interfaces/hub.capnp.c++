// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: hub.capnp

#include "hub.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<155> b_b1488898d891c95e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94, 201, 145, 216, 152, 136,  72, 177,
     10,   0,   0,   0,   1,   0,   2,   0,
      8, 147,  30,  15,   3, 174, 147, 200,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  65,  99,  99, 111, 117, 110,
    116,  83, 116,  97, 116, 117, 115,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     93, 143,  66, 147, 123, 228, 144, 145,
      1,   0,   0,   0,  58,   0,   0,   0,
     83, 116,  97, 116, 117, 115,   0,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,  99, 111, 110,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 107,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 116,  76, 105, 110, 107,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 114, 101,  97, 100,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     93, 143,  66, 147, 123, 228, 144, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98,  84, 121, 112, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1488898d891c95e = b_b1488898d891c95e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1488898d891c95e[] = {
  &s_9190e47b93428f5d,
};
static const uint16_t m_b1488898d891c95e[] = {4, 2, 3, 7, 8, 0, 5, 1, 6};
static const uint16_t i_b1488898d891c95e[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_b1488898d891c95e = {
  0xb1488898d891c95e, b_b1488898d891c95e.words, 155, d_b1488898d891c95e, m_b1488898d891c95e,
  1, 9, i_b1488898d891c95e, nullptr, nullptr, { &s_b1488898d891c95e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9190e47b93428f5d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 143,  66, 147, 123, 228, 144, 145,
     24,   0,   0,   0,   2,   0,   0,   0,
     94, 201, 145, 216, 152, 136,  72, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  65,  99,  99, 111, 117, 110,
    116,  83, 116,  97, 116, 117, 115,  46,
     83, 116,  97, 116, 117, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
    111, 110, 108, 105, 110, 101,   0,   0,
    111, 102, 102, 108, 105, 110, 101,   0,
    101, 114, 114, 111, 114,   0,   0,   0, }
};
::capnp::word const* const bp_9190e47b93428f5d = b_9190e47b93428f5d.words;
#if !CAPNP_LITE
static const uint16_t m_9190e47b93428f5d[] = {3, 0, 2, 1};
const ::capnp::_::RawSchema s_9190e47b93428f5d = {
  0x9190e47b93428f5d, b_9190e47b93428f5d.words, 34, nullptr, m_9190e47b93428f5d,
  0, 4, nullptr, nullptr, nullptr, { &s_9190e47b93428f5d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Status_9190e47b93428f5d, 9190e47b93428f5d);
static const ::capnp::_::AlignedData<213> b_e3d4bcb9d852880b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11, 136,  82, 216, 185, 188, 212, 227,
     10,   0,   0,   0,   1,   0,   1,   0,
      8, 147,  30,  15,   3, 174, 147, 200,
     12,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 223,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     52,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    100,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    104,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   1,   0,   0,   3,   0,   1,   0,
    112,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   1,   0,   0,   3,   0,   1,   0,
    120,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   1,   0,   0,   3,   0,   1,   0,
    128,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   1,   0,   0,   3,   0,   1,   0,
    144,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   1,   0,   0,   3,   0,   1,   0,
    152,   1,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 115, 103,  73, 100,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 111, 117, 110, 116,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 117, 114,  99, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,  99, 111, 110,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 107,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 116,  76, 105, 110, 107,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 110, 100, 101, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 110, 100, 101, 114,  78,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98,  84, 121, 112, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3d4bcb9d852880b = b_e3d4bcb9d852880b.words;
#if !CAPNP_LITE
static const uint16_t m_e3d4bcb9d852880b[] = {2, 7, 5, 6, 11, 1, 8, 9, 3, 12, 0, 10, 4};
static const uint16_t i_e3d4bcb9d852880b[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
const ::capnp::_::RawSchema s_e3d4bcb9d852880b = {
  0xe3d4bcb9d852880b, b_e3d4bcb9d852880b.words, 213, nullptr, m_e3d4bcb9d852880b,
  0, 13, i_e3d4bcb9d852880b, nullptr, nullptr, { &s_e3d4bcb9d852880b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_83e7e22305decbfa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    250, 203, 222,   5,  35, 226, 231, 131,
     10,   0,   0,   0,   3,   0,   0,   0,
      8, 147,  30,  15,   3, 174, 147, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   7,   1,   0,   0,
    209,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 108,  36, 185, 224,  34, 106, 152,
     53,  31, 121, 131, 220,  75, 200, 241,
    113,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    196, 200, 242, 242, 209, 157,  21, 194,
    123, 157, 113, 117, 123, 161,  67, 210,
     93,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    111, 199, 237, 252, 143, 241, 111, 173,
     46, 243,  61,  15,  42,  96, 240, 218,
     73,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    233, 136, 115, 165, 231,  82, 212, 153,
    121, 227, 202,  87, 249, 204, 167, 169,
     57,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  76,  97, 115, 116,  77,
    101, 115, 115,  97, 103, 101, 115,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  76,  97, 115, 116,  77,
    101, 115, 115,  97, 103, 101,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  65,  99,  99, 111, 117,
    110, 116,  83, 116,  97, 116, 117, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  65,  99,  99, 111, 117,
    110, 116, 115,  83, 116,  97, 116, 117,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_83e7e22305decbfa = b_83e7e22305decbfa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_83e7e22305decbfa[] = {
  &s_986a22e0b9246c67,
  &s_99d452e7a57388e9,
  &s_a9a7ccf957cae379,
  &s_ad6ff18ffcedc76f,
  &s_c2159dd1f2f2c8c4,
  &s_d243a17b75719d7b,
  &s_daf0602a0f3df32e,
  &s_f1c84bdc83791f35,
};
static const uint16_t m_83e7e22305decbfa[] = {2, 3, 1, 0};
const ::capnp::_::RawSchema s_83e7e22305decbfa = {
  0x83e7e22305decbfa, b_83e7e22305decbfa.words, 64, d_83e7e22305decbfa, m_83e7e22305decbfa,
  8, 4, nullptr, nullptr, nullptr, { &s_83e7e22305decbfa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_986a22e0b9246c67 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 108,  36, 185, 224,  34, 106, 152,
     20,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  76,
     97, 115, 116,  77, 101, 115, 115,  97,
    103, 101, 115,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 117, 110, 116,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_986a22e0b9246c67 = b_986a22e0b9246c67.words;
#if !CAPNP_LITE
static const uint16_t m_986a22e0b9246c67[] = {0};
static const uint16_t i_986a22e0b9246c67[] = {0};
const ::capnp::_::RawSchema s_986a22e0b9246c67 = {
  0x986a22e0b9246c67, b_986a22e0b9246c67.words, 34, nullptr, m_986a22e0b9246c67,
  0, 1, i_986a22e0b9246c67, nullptr, nullptr, { &s_986a22e0b9246c67, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_f1c84bdc83791f35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53,  31, 121, 131, 220,  75, 200, 241,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  76,
     97, 115, 116,  77, 101, 115, 115,  97,
    103, 101, 115,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 115,  97, 103, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11, 136,  82, 216, 185, 188, 212, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f1c84bdc83791f35 = b_f1c84bdc83791f35.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f1c84bdc83791f35[] = {
  &s_e3d4bcb9d852880b,
};
static const uint16_t m_f1c84bdc83791f35[] = {0};
static const uint16_t i_f1c84bdc83791f35[] = {0};
const ::capnp::_::RawSchema s_f1c84bdc83791f35 = {
  0xf1c84bdc83791f35, b_f1c84bdc83791f35.words, 39, d_f1c84bdc83791f35, m_f1c84bdc83791f35,
  1, 1, i_f1c84bdc83791f35, nullptr, nullptr, { &s_f1c84bdc83791f35, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c2159dd1f2f2c8c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196, 200, 242, 242, 209, 157,  21, 194,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  76,
     97, 115, 116,  77, 101, 115, 115,  97,
    103, 101,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c2159dd1f2f2c8c4 = b_c2159dd1f2f2c8c4.words;
#if !CAPNP_LITE
static const uint16_t m_c2159dd1f2f2c8c4[] = {0};
static const uint16_t i_c2159dd1f2f2c8c4[] = {0};
const ::capnp::_::RawSchema s_c2159dd1f2f2c8c4 = {
  0xc2159dd1f2f2c8c4, b_c2159dd1f2f2c8c4.words, 34, nullptr, m_c2159dd1f2f2c8c4,
  0, 1, i_c2159dd1f2f2c8c4, nullptr, nullptr, { &s_c2159dd1f2f2c8c4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d243a17b75719d7b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 157, 113, 117, 123, 161,  67, 210,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  76,
     97, 115, 116,  77, 101, 115, 115,  97,
    103, 101,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11, 136,  82, 216, 185, 188, 212, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d243a17b75719d7b = b_d243a17b75719d7b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d243a17b75719d7b[] = {
  &s_e3d4bcb9d852880b,
};
static const uint16_t m_d243a17b75719d7b[] = {0};
static const uint16_t i_d243a17b75719d7b[] = {0};
const ::capnp::_::RawSchema s_d243a17b75719d7b = {
  0xd243a17b75719d7b, b_d243a17b75719d7b.words, 34, d_d243a17b75719d7b, m_d243a17b75719d7b,
  1, 1, i_d243a17b75719d7b, nullptr, nullptr, { &s_d243a17b75719d7b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ad6ff18ffcedc76f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    111, 199, 237, 252, 143, 241, 111, 173,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  65,
     99,  99, 111, 117, 110, 116,  83, 116,
     97, 116, 117, 115,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad6ff18ffcedc76f = b_ad6ff18ffcedc76f.words;
#if !CAPNP_LITE
static const uint16_t m_ad6ff18ffcedc76f[] = {0};
static const uint16_t i_ad6ff18ffcedc76f[] = {0};
const ::capnp::_::RawSchema s_ad6ff18ffcedc76f = {
  0xad6ff18ffcedc76f, b_ad6ff18ffcedc76f.words, 34, nullptr, m_ad6ff18ffcedc76f,
  0, 1, i_ad6ff18ffcedc76f, nullptr, nullptr, { &s_ad6ff18ffcedc76f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_daf0602a0f3df32e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     46, 243,  61,  15,  42,  96, 240, 218,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  65,
     99,  99, 111, 117, 110, 116,  83, 116,
     97, 116, 117, 115,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116,  83,
    116,  97, 116, 117, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 201, 145, 216, 152, 136,  72, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_daf0602a0f3df32e = b_daf0602a0f3df32e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_daf0602a0f3df32e[] = {
  &s_b1488898d891c95e,
};
static const uint16_t m_daf0602a0f3df32e[] = {0};
static const uint16_t i_daf0602a0f3df32e[] = {0};
const ::capnp::_::RawSchema s_daf0602a0f3df32e = {
  0xdaf0602a0f3df32e, b_daf0602a0f3df32e.words, 35, d_daf0602a0f3df32e, m_daf0602a0f3df32e,
  1, 1, i_daf0602a0f3df32e, nullptr, nullptr, { &s_daf0602a0f3df32e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_99d452e7a57388e9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233, 136, 115, 165, 231,  82, 212, 153,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  65,
     99,  99, 111, 117, 110, 116, 115,  83,
    116,  97, 116, 117, 115,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99d452e7a57388e9 = b_99d452e7a57388e9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_99d452e7a57388e9 = {
  0x99d452e7a57388e9, b_99d452e7a57388e9.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_99d452e7a57388e9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_a9a7ccf957cae379 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121, 227, 202,  87, 249, 204, 167, 169,
     20,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  82, 101,  97,
    100, 101, 114,  46, 103, 101, 116,  65,
     99,  99, 111, 117, 110, 116, 115,  83,
    116,  97, 116, 117, 115,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     97,  99,  99, 111, 117, 110, 116, 115,
     83, 116,  97, 116, 117, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 201, 145, 216, 152, 136,  72, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9a7ccf957cae379 = b_a9a7ccf957cae379.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a9a7ccf957cae379[] = {
  &s_b1488898d891c95e,
};
static const uint16_t m_a9a7ccf957cae379[] = {0};
static const uint16_t i_a9a7ccf957cae379[] = {0};
const ::capnp::_::RawSchema s_a9a7ccf957cae379 = {
  0xa9a7ccf957cae379, b_a9a7ccf957cae379.words, 39, d_a9a7ccf957cae379, m_a9a7ccf957cae379,
  1, 1, i_a9a7ccf957cae379, nullptr, nullptr, { &s_a9a7ccf957cae379, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_e2b500f36dc30818 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24,   8, 195, 109, 243,   0, 181, 226,
     10,   0,   0,   0,   1,   0,   0,   0,
      8, 147,  30,  15,   3, 174, 147, 200,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  69, 118, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    249, 234, 126, 156, 151, 231,  73, 228,
     17,   0,   0,   0, 122,   0,   0,   0,
     24, 191, 234, 193,  14, 121, 208, 183,
     17,   0,   0,   0,  82,   0,   0,   0,
     49, 107,  75, 240, 113, 221,  41, 250,
     17,   0,   0,   0,  50,   0,   0,   0,
     72, 117,  98,  69, 118, 101, 110, 116,
     83, 116, 114, 117,  99, 116,   0,   0,
     69, 118, 101, 110, 116,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
     80,  97, 114,  97, 109,   0,   0,   0, }
};
::capnp::word const* const bp_e2b500f36dc30818 = b_e2b500f36dc30818.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e2b500f36dc30818 = {
  0xe2b500f36dc30818, b_e2b500f36dc30818.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e2b500f36dc30818, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_e449e7979c7eeaf9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249, 234, 126, 156, 151, 231,  73, 228,
     19,   0,   0,   0,   1,   0,   1,   0,
     24,   8, 195, 109, 243,   0, 181, 226,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  69, 118, 101,
    110, 116,  46,  72, 117,  98,  69, 118,
    101, 110, 116,  83, 116, 114, 117,  99,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 117, 114,  99, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     24, 191, 234, 193,  14, 121, 208, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     49, 107,  75, 240, 113, 221,  41, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e449e7979c7eeaf9 = b_e449e7979c7eeaf9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e449e7979c7eeaf9[] = {
  &s_b7d0790ec1eabf18,
  &s_fa29dd71f04b6b31,
};
static const uint16_t m_e449e7979c7eeaf9[] = {2, 0, 1};
static const uint16_t i_e449e7979c7eeaf9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e449e7979c7eeaf9 = {
  0xe449e7979c7eeaf9, b_e449e7979c7eeaf9.words, 68, d_e449e7979c7eeaf9, m_e449e7979c7eeaf9,
  2, 3, i_e449e7979c7eeaf9, nullptr, nullptr, { &s_e449e7979c7eeaf9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b7d0790ec1eabf18 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24, 191, 234, 193,  14, 121, 208, 183,
     19,   0,   0,   0,   2,   0,   0,   0,
     24,   8, 195, 109, 243,   0, 181, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  69, 118, 101,
    110, 116,  46,  69, 118, 101, 110, 116,
     84, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
     97,  99,  99, 111, 117, 110, 116,  83,
    116,  97, 116, 117, 115,  69, 118, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,  69,
    118, 101, 110, 116,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b7d0790ec1eabf18 = b_b7d0790ec1eabf18.words;
#if !CAPNP_LITE
static const uint16_t m_b7d0790ec1eabf18[] = {1, 2, 0};
const ::capnp::_::RawSchema s_b7d0790ec1eabf18 = {
  0xb7d0790ec1eabf18, b_b7d0790ec1eabf18.words, 33, nullptr, m_b7d0790ec1eabf18,
  0, 3, nullptr, nullptr, nullptr, { &s_b7d0790ec1eabf18, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(EventType_b7d0790ec1eabf18, b7d0790ec1eabf18);
static const ::capnp::_::AlignedData<48> b_fa29dd71f04b6b31 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 107,  75, 240, 113, 221,  41, 250,
     19,   0,   0,   0,   1,   0,   0,   0,
     24,   8, 195, 109, 243,   0, 181, 226,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117,  98,  46,  99,  97, 112, 110,
    112,  58,  72, 117,  98,  69, 118, 101,
    110, 116,  46,  80,  97, 114,  97, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa29dd71f04b6b31 = b_fa29dd71f04b6b31.words;
#if !CAPNP_LITE
static const uint16_t m_fa29dd71f04b6b31[] = {0, 1};
static const uint16_t i_fa29dd71f04b6b31[] = {0, 1};
const ::capnp::_::RawSchema s_fa29dd71f04b6b31 = {
  0xfa29dd71f04b6b31, b_fa29dd71f04b6b31.words, 48, nullptr, m_fa29dd71f04b6b31,
  0, 2, i_fa29dd71f04b6b31, nullptr, nullptr, { &s_fa29dd71f04b6b31, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// AccountStatus
constexpr uint16_t AccountStatus::_capnpPrivate::dataWordSize;
constexpr uint16_t AccountStatus::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AccountStatus::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AccountStatus::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Message
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::HubReader::GetLastMessagesParams,  ::HubReader::GetLastMessagesResults>
HubReader::Client::getLastMessagesRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::HubReader::GetLastMessagesParams,  ::HubReader::GetLastMessagesResults>(
      0x83e7e22305decbfaull, 0, sizeHint);
}
::kj::Promise<void> HubReader::Server::getLastMessages(GetLastMessagesContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "hub.capnp:HubReader", "getLastMessages",
      0x83e7e22305decbfaull, 0);
}
::capnp::Request< ::HubReader::GetLastMessageParams,  ::HubReader::GetLastMessageResults>
HubReader::Client::getLastMessageRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::HubReader::GetLastMessageParams,  ::HubReader::GetLastMessageResults>(
      0x83e7e22305decbfaull, 1, sizeHint);
}
::kj::Promise<void> HubReader::Server::getLastMessage(GetLastMessageContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "hub.capnp:HubReader", "getLastMessage",
      0x83e7e22305decbfaull, 1);
}
::capnp::Request< ::HubReader::GetAccountStatusParams,  ::HubReader::GetAccountStatusResults>
HubReader::Client::getAccountStatusRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::HubReader::GetAccountStatusParams,  ::HubReader::GetAccountStatusResults>(
      0x83e7e22305decbfaull, 2, sizeHint);
}
::kj::Promise<void> HubReader::Server::getAccountStatus(GetAccountStatusContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "hub.capnp:HubReader", "getAccountStatus",
      0x83e7e22305decbfaull, 2);
}
::capnp::Request< ::HubReader::GetAccountsStatusParams,  ::HubReader::GetAccountsStatusResults>
HubReader::Client::getAccountsStatusRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::HubReader::GetAccountsStatusParams,  ::HubReader::GetAccountsStatusResults>(
      0x83e7e22305decbfaull, 3, sizeHint);
}
::kj::Promise<void> HubReader::Server::getAccountsStatus(GetAccountsStatusContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "hub.capnp:HubReader", "getAccountsStatus",
      0x83e7e22305decbfaull, 3);
}
::capnp::Capability::Server::DispatchCallResult HubReader::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0x83e7e22305decbfaull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("hub.capnp:HubReader", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult HubReader::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        getLastMessages(::capnp::Capability::Server::internalGetTypedContext<
             ::HubReader::GetLastMessagesParams,  ::HubReader::GetLastMessagesResults>(context)),
        false
      };
    case 1:
      return {
        getLastMessage(::capnp::Capability::Server::internalGetTypedContext<
             ::HubReader::GetLastMessageParams,  ::HubReader::GetLastMessageResults>(context)),
        false
      };
    case 2:
      return {
        getAccountStatus(::capnp::Capability::Server::internalGetTypedContext<
             ::HubReader::GetAccountStatusParams,  ::HubReader::GetAccountStatusResults>(context)),
        false
      };
    case 3:
      return {
        getAccountsStatus(::capnp::Capability::Server::internalGetTypedContext<
             ::HubReader::GetAccountsStatusParams,  ::HubReader::GetAccountsStatusResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "hub.capnp:HubReader",
          0x83e7e22305decbfaull, methodId);
  }
}
#endif  // !CAPNP_LITE

// HubReader
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetLastMessagesParams
constexpr uint16_t HubReader::GetLastMessagesParams::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetLastMessagesParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetLastMessagesParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetLastMessagesParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetLastMessagesResults
constexpr uint16_t HubReader::GetLastMessagesResults::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetLastMessagesResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetLastMessagesResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetLastMessagesResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetLastMessageParams
constexpr uint16_t HubReader::GetLastMessageParams::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetLastMessageParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetLastMessageParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetLastMessageParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetLastMessageResults
constexpr uint16_t HubReader::GetLastMessageResults::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetLastMessageResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetLastMessageResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetLastMessageResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetAccountStatusParams
constexpr uint16_t HubReader::GetAccountStatusParams::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetAccountStatusParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetAccountStatusParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetAccountStatusParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetAccountStatusResults
constexpr uint16_t HubReader::GetAccountStatusResults::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetAccountStatusResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetAccountStatusResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetAccountStatusResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetAccountsStatusParams
constexpr uint16_t HubReader::GetAccountsStatusParams::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetAccountsStatusParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetAccountsStatusParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetAccountsStatusParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubReader::GetAccountsStatusResults
constexpr uint16_t HubReader::GetAccountsStatusResults::_capnpPrivate::dataWordSize;
constexpr uint16_t HubReader::GetAccountsStatusResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubReader::GetAccountsStatusResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubReader::GetAccountsStatusResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubEvent
constexpr uint16_t HubEvent::_capnpPrivate::dataWordSize;
constexpr uint16_t HubEvent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubEvent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubEvent::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubEvent::HubEventStruct
constexpr uint16_t HubEvent::HubEventStruct::_capnpPrivate::dataWordSize;
constexpr uint16_t HubEvent::HubEventStruct::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubEvent::HubEventStruct::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubEvent::HubEventStruct::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// HubEvent::Param
constexpr uint16_t HubEvent::Param::_capnpPrivate::dataWordSize;
constexpr uint16_t HubEvent::Param::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HubEvent::Param::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HubEvent::Param::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



